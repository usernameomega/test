name: 'Template For Docker Build, ECR Push And Helm Deploy Actions'

on:
  workflow_call:

    inputs:
      environment:
        type: string
        required: true
      app:
        type: string
        required: true
      repository:
        type: string
        required: true
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      env_vars:
        required: false
      GITOPS_GITHUB_APPLICATION_PRIVATE_KEY:
        required: true
      NAMESPACE:
        required: true
      ECR_REGISTRY:
        required: true

jobs:

  call-build-and-push:
    uses: ./.github/workflows/build-and-push.yaml
    with:
      tag: '${{ needs.call-env.outputs.tag }}'
      dockerfile: ./docker/Dockerfile
      environment: '${{ inputs.environment }}'
    secrets:
      aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      aws_region: ${{ secrets.AWS_REGION }}
      ecr_registry: ${{ secrets.ECR_REGISTRY }}
      app: '${{secrets.NAMESPACE}}-${{inputs.app}}'
      env_vars: ${{ secrets.env_vars}}

  call-release:
    runs-on: ubuntu-24.04
    uses: ./.github/workflows/create-release.yaml
    secrets: inherit
    with:
      tag: 'mtg-fe-${{ needs.call-env.outputs.tag }}'

#  call-deploy:
#    needs:
#      - call-build-and-push
#      - call-env
#      - call-release
#    uses: Swiss-Digital-Assets-Institute/.github/.github/workflows/deploy-v2.yml@main
#    with:
#      tag: '${{ needs.call-env.outputs.tag }}'
#      repository: ${{inputs.repository}}
#      url: "Swiss-Digital-Assets-Institute/gitops"
#      environment: ${{inputs.environment}}
#    secrets:
#      GITOPS_GITHUB_APPLICATION_PRIVATE_KEY: ${{ secrets.GITOPS_GITHUB_APPLICATION_PRIVATE_KEY }}